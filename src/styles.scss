// styles.scss (globale Datei)
@forward './app/shared/styles/button.scss';
@forward './app/shared/styles/colors.scss';
@forward './app/shared/styles/fonts.scss';
@forward './app/shared/styles/logo.scss';
@forward './app/shared/styles/standard.scss';
@forward './app/shared/styles/text-links.scss';
@forward './app/shared/styles/responsive.scss';


// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming

// @use '@angular/material' as mat; // auskommentiert

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!

// @include mat.core(); // auskommentiert

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

// $portfolio-primary: mat.define-palette(mat.$indigo-palette); // auskommentiert
// $portfolio-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400); // auskommentiert

// The warn palette is optional (defaults to red).

// $portfolio-warn: mat.define-palette(mat.$red-palette); // auskommentiert

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".

 // auskommentiert
// $portfolio-theme: mat.define-light-theme((
//   color: (
//     primary: $portfolio-primary,
//     accent: $portfolio-accent,
//     warn: $portfolio-warn,
//   ),
//   typography: mat.define-typography-config(),
//   density: 0
// ));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.

// @include mat.all-component-themes($portfolio-theme);  // auskommentiert


// @import './app/shared/styles/standard.scss';
// @import './app/shared/styles/fonts.scss';
// @import './app/shared/styles/colors.scss';

// // elements
// @import './app/shared/styles/logo.scss';
// @import './app/shared/styles/button.scss';

*{
  scroll-behavior: smooth;
  scrollbar-width: thin;
  scrollbar-color: #3DCFB6 #dddddd00;
}

::-webkit-scrollbar {
  width: 4px;
  height: 10px;
  border-radius: 10px; 
}

::-webkit-scrollbar-thumb {
  background-color: #3DCFB6;
  border-radius: 10px;
}

::-webkit-scrollbar-track {
  background-color: #00000000;
  border: 1px solid #00000000;
}

// Variables for breakpoints

$breakpoint-desktop-large: 1920px; //min-width
$breakpoint-desktop-normal: 1366px;
$breakpoint-tablet-large: 1024px;
$breakpoint-tablet-small: 768px;
$breakpoint-smartphone-medium: 576px;
$breakpoint-smartphone-small: 385px;

$breakpoint-smartphone-medium-height: 800px;
$breakpoint-smartphone-small-height: 531px;

// Mixins for media queries
@mixin respond-to($breakpoint) {
  @if $breakpoint == desktop-large {
    @media (min-width: $breakpoint-desktop-large) { @content; }
  }
  @else if $breakpoint == desktop-normal {
    @media (max-width: $breakpoint-desktop-normal) { @content; }
  }
  @else if $breakpoint == tablet-large {
    @media (max-width: $breakpoint-tablet-large) { @content; }
  }
  @else if $breakpoint == tablet-small {
    @media (max-width: $breakpoint-tablet-small) { @content; }
  }
  @else if $breakpoint == smartphone-medium {
    @media (max-width: $breakpoint-smartphone-medium) { @content; }
  }
  @else if $breakpoint == smartphone-small {
    @media (max-width: $breakpoint-smartphone-small) { @content; }
  }
  @else if $breakpoint == smartphone-medium-height {
    @media (max-height: $breakpoint-smartphone-medium-height) { @content; }
  }
  @else if $breakpoint == smartphone-small-height {
    @media (max-height: $breakpoint-smartphone-small-height) { @content; }
  }

}


